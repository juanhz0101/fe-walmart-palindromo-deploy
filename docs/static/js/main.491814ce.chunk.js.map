{"version":3,"sources":["helpers/getProducts.js","components/products/ProductGridItem.js","components/products/ProductGrid.js","hooks/useFetchProducts.js","components/products/AddSearch.js","PalindromeApp.js","index.js"],"names":["getProducts","paginationUrl","a","paginationConfig","getPaginationConfig","url","fetch","response","json","resources","pagination","products","map","id","brand","description","image","price","getPaginationLimits","page","limit","paginationInfo","getProductsQuery","query","encodeURI","priceWithDiscount","discount","split","isUrl","URL","params","URLSearchParams","search","get","ProductGridItem","formatPrice","Intl","NumberFormat","format","parseFloat","className","src","alt","ProductGrid","setQuery","useState","data","loading","state","setState","useEffect","then","useFetchProducts","product","totalResources","totalPages","disabled","previous","onClick","e","q","next","first","last","AddSearch","inputValue","setInputValue","type","value","onChange","target","placeholder","PalindromeApp","defaultQuery","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.491814ce.chunk.js","sourcesContent":["export const getProducts = async (paginationUrl) => {\n\n    const paginationConfig = getPaginationConfig(paginationUrl)\n    const url = `https://be-walmart-palindromo-deploy-xudt4.ondigitalocean.app/products?${paginationConfig}`;\n    const response = await fetch( url ,{\n        'mode': 'cors',\n        'headers': {\n            'Access-Control-Allow-Origin': '*',\n        }\n    } );\n    const { resources, pagination } = await response.json();\n    const products = resources.map(({id, brand, description, image, price }) => {\n        return { id, brand, description, image:`https://${image}`, price } \n    })\n\n    const {page, limit} = getPaginationLimits(url)\n    pagination.page = page;\n    pagination.limit = limit;\n\n    return {\n        products,\n        paginationInfo: pagination\n    }\n\n}\n\nexport const getProductsQuery = async ( query, paginationUrl ) => { \n    const paginationConfig = getPaginationConfig(paginationUrl)\n    const url = `https://be-walmart-palindromo-deploy-xudt4.ondigitalocean.app/products/search?query=${ encodeURI( query ) }&${paginationConfig}`;\n    const response = await fetch( url ,{\n        'mode': 'cors',\n        'headers': {\n            'Access-Control-Allow-Origin': '*',\n        }\n    } );\n    const { resources, pagination } = await response.json();\n    const products = resources.map(({id, brand, description, image, price, priceWithDiscount, discount  }) => {\n\n        return {id, brand, description, image:`https://${image}`, price, priceWithDiscount, discount }\n    })\n\n    const {page, limit} = getPaginationLimits(url)\n    pagination.page = page;\n    pagination.limit = limit;\n    return {\n        products,\n        paginationInfo: pagination\n    }\n}\n\nconst getPaginationConfig = (url) => {\n    return url.split('?')[1]\n}\n\nconst getPaginationLimits = (url) => {\n        \n    const isUrl = new URL(url)\n    const params = new URLSearchParams(isUrl.search)\n\n    return { page:params.get('page') , limit: params.get('limit')}\n}","import React from 'react'\nimport PropTypes from 'prop-types'\n\nfunction ProductGridItem( { id, brand, description, image, price, priceWithDiscount, discount} ) {\n\n    const formatPrice = (price) => {\n        const numberFormat = new Intl.NumberFormat('es-ES');\n        return numberFormat.format( parseFloat(price))\n    }\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <p>Identificador: {id}</p>\n            <img src={image} alt={brand}/>\n            {discount && <p className=\"discount\">Descuento %{discount} ðŸ’¥ </p> }\n            {priceWithDiscount ? \n                <p> <b>Precio normal</b> <br /><del>${ formatPrice(price) }</del></p> \n                :\n                <p> <b>Precio</b> <br /> ${ formatPrice(price) }</p> \n            }\n            {priceWithDiscount && <p> <b>Precio x Hoy</b> <br /> ${ formatPrice(priceWithDiscount) } ðŸ˜±</p> }\n            <p className=\"brand\"><b>Marca</b> <br /> {brand}</p>\n            <p><b>DescripciÃ³n</b> <br />{description}</p>\n             \n        </div>\n    )\n}\n\nexport default ProductGridItem\n\nProductGridItem.propTypes = {\n    brand: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired\n}\n","import React from 'react'\nimport { useFetchProducts } from '../../hooks/useFetchProducts'\nimport ProductGridItem from './ProductGridItem';\nimport PropTypes from 'prop-types';\n\n\nfunction ProductGrid({ query, setQuery }) {\n    \n    const { data:products, loading, paginationInfo } = useFetchProducts( query );\n\n    const heandleButtonPreviousPage = (e) => ( setQuery(q => ({ ...q, 'pagination': paginationInfo.previous })) )\n    const heandleButtonNextPage = (e) => ( setQuery(q => ({ ...q, 'pagination': paginationInfo.next })) )\n    const heandleButtonFirstPage = (e) => ( setQuery(q => ({ ...q, 'pagination': paginationInfo.first })) )\n    const heandleButtonLastPage = (e) => ( setQuery(q => ({  ...q, 'pagination': paginationInfo.last })) )\n\n    return (\n        <>\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p>}\n\n            <div className=\"card-grid\">\n                {\n                    products.map( ( product ) =>  (\n                    \n                        <ProductGridItem \n                            key={product.id} \n                            { ...product} \n                            />\n                    )) \n                }\n            </div>\n\n            <div >\n                <p>Total registros: {paginationInfo.totalResources}</p>\n                <p>Total registros por pagina: {paginationInfo.limit}</p>\n                <p>Total paginas: {paginationInfo.totalPages}</p>\n                <p>Pagina actual: {paginationInfo.page}</p>\n                <br />\n                <p>\n                    <button disabled={paginationInfo.previous === null} onClick={ heandleButtonPreviousPage }>Previa</button>\n                    \n                    <button disabled={paginationInfo.next === null} onClick={ heandleButtonNextPage }>Siguiente</button>\n\n                    <button disabled={paginationInfo.first === null} onClick={ heandleButtonFirstPage }>Primera</button>\n\n                    <button disabled={paginationInfo.last === null} onClick={ heandleButtonLastPage }>Ultima</button>\n                </p>\n            </div>\n\n        </>\n        \n    )\n}\n\nexport default ProductGrid\n\nProductGrid.propTypes = {\n    query: PropTypes.object.isRequired,\n    setQuery: PropTypes.func.isRequired\n}\n\n","import { useEffect, useState } from \"react\"\nimport { getProducts, getProductsQuery } from '../helpers/getProducts';\n\nexport  const useFetchProducts = ({query = '', pagination = '/products?page=1&limit=20'} ) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true,\n        paginationInfo: {}\n    });\n\n    useEffect( () => {\n\n        if (query === '') {\n            getProducts(pagination)\n            .then( ({ products, paginationInfo }) => {\n                setState({\n                    data: products,\n                    loading: false,\n                    paginationInfo\n                })\n            })\n        }else{\n            getProductsQuery(query, pagination)\n            .then( ({ products, paginationInfo }) => {\n                setState({\n                    data: products,\n                    loading: false,\n                    paginationInfo\n                })\n            })\n        }\n\n    }, [ query, pagination])\n\n    return state\n\n}","import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\n\nfunction AddSearch({ setQuery }) {\n\n    const [inputValue, setInputValue] = useState('')\n\n    useEffect(() => {\n        setInputValue(inputValue);\n        if (inputValue === ' ') {\n            setInputValue('');\n        }else{\n            setQuery(q => ({ ...q, 'query': inputValue }))\n        }\n       \n    }, [inputValue, setQuery]);\n\n    return (\n        \n        <form>\n            <input\n                type=\"text\" \n                value={inputValue}\n                onChange={ (e) => setInputValue(e.target.value) }\n                placeholder=\"Por favor ingrese un Nombre o ID de producto\"\n            />\n        </form>\n    )\n}\n\n\nAddSearch.propTypes = {\n    setQuery: PropTypes.func.isRequired\n}\n\nexport default AddSearch\n","import React, { useState } from 'react'\nimport ProductGrid from './components/products/ProductGrid'\nimport AddSearch from './components/products/AddSearch'\n\nfunction PalindromeApp({ defaultQuery = { query: '', pagination:'/products?page=1&limit=20'} }) {\n\n    const [query, setQuery] = useState(defaultQuery)\n    \n    return (\n        <>\n            <h2>Lider Palindromo ðŸŒŸ</h2>\n            <hr />\n            <AddSearch setQuery={setQuery} /> \n            <hr />\n            <ProductGrid query={query} setQuery={setQuery} /> \n            \n        </>\n    )\n}\n\nexport default PalindromeApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PalindromeApp  from './PalindromeApp';\nimport './index.css';\n\nReactDOM.render(\n    <PalindromeApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}